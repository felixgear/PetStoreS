<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="14" total="40" passed="10" failed="2" skipped="14">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-18T11:59:29 CEST" name="Suite" finished-at="2024-06-18T11:59:36 CEST" duration-ms="7061">
    <groups>
      <group name="negative">
        <method signature="PersonTests.testCreateUsersWithArrayFailure()[pri:0, instance:com.felixgear.petstores.person.PersonTests@29a5f4e7]" name="testCreateUsersWithArrayFailure" class="com.felixgear.petstores.person.PersonTests"/>
        <method signature="PersonTests.testGetUserByUsernameFailure()[pri:0, instance:com.felixgear.petstores.person.PersonTests@29a5f4e7]" name="testGetUserByUsernameFailure" class="com.felixgear.petstores.person.PersonTests"/>
        <method signature="PersonTests.testLogoutUserFailure()[pri:0, instance:com.felixgear.petstores.person.PersonTests@29a5f4e7]" name="testLogoutUserFailure" class="com.felixgear.petstores.person.PersonTests"/>
        <method signature="PetTests.testAddNewPetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testAddNewPetFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testDeletePetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testDeletePetFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetByIdFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetByIdFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByStatusFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByStatusFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByTagsFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByTagsFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetWithFormFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetWithFormFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="StoreTests.testDeleteOrderByIdFailure()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testDeleteOrderByIdFailure" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testGetOrderByIdFailure()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testGetOrderByIdFailure" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testPlaceOrderFailure()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testPlaceOrderFailure" class="com.felixgear.petstores.store.StoreTests"/>
      </group> <!-- negative -->
      <group name="regression">
        <method signature="PersonTests.testCreateUsersWithArrayFailure()[pri:0, instance:com.felixgear.petstores.person.PersonTests@29a5f4e7]" name="testCreateUsersWithArrayFailure" class="com.felixgear.petstores.person.PersonTests"/>
        <method signature="PersonTests.testGetUserByUsernameFailure()[pri:0, instance:com.felixgear.petstores.person.PersonTests@29a5f4e7]" name="testGetUserByUsernameFailure" class="com.felixgear.petstores.person.PersonTests"/>
        <method signature="PersonTests.testLogoutUserFailure()[pri:0, instance:com.felixgear.petstores.person.PersonTests@29a5f4e7]" name="testLogoutUserFailure" class="com.felixgear.petstores.person.PersonTests"/>
        <method signature="PetTests.testAddNewPetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testAddNewPetFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testAddNewPetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testAddNewPetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testDeletePetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testDeletePetFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetByIdFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetByIdFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByStatusFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByStatusFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByStatusSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByStatusSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByTagsFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByTagsFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByTagsSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByTagsSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetByIdAfterUpdateSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetByIdAfterUpdateSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetWithFormFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetWithFormFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetWithFormSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetWithFormSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testDeletePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testDeletePetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetByIdAfterDeleteSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetByIdAfterDeleteSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUploadImageSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUploadImageSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="StoreTests.testDeleteOrderByIdFailure()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testDeleteOrderByIdFailure" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testGetInventorySuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testGetInventorySuccess" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testGetOrderByIdFailure()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testGetOrderByIdFailure" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testPlaceOrderFailure()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testPlaceOrderFailure" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testPlaceOrderSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testPlaceOrderSuccess" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testDeleteOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testDeleteOrderByIdSuccess" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testGetOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testGetOrderByIdSuccess" class="com.felixgear.petstores.store.StoreTests"/>
      </group> <!-- regression -->
      <group name="before_delete">
        <method signature="PetTests.testAddNewPetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testAddNewPetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByStatusSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByStatusSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByTagsSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByTagsSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetByIdAfterUpdateSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetByIdAfterUpdateSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetWithFormFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetWithFormFailure" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetWithFormSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetWithFormSuccess" class="com.felixgear.petstores.pet.PetTests"/>
      </group> <!-- before_delete -->
      <group name="smoke">
        <method signature="PetTests.testAddNewPetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testAddNewPetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByStatusSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByStatusSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByTagsSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByTagsSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetByIdAfterUpdateSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetByIdAfterUpdateSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetWithFormSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetWithFormSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testDeletePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testDeletePetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetByIdAfterDeleteSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetByIdAfterDeleteSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUploadImageSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUploadImageSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="StoreTests.testGetInventorySuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testGetInventorySuccess" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testPlaceOrderSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testPlaceOrderSuccess" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testDeleteOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testDeleteOrderByIdSuccess" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testGetOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testGetOrderByIdSuccess" class="com.felixgear.petstores.store.StoreTests"/>
      </group> <!-- smoke -->
      <group name="positive">
        <method signature="PetTests.testAddNewPetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testAddNewPetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByStatusSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByStatusSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetsByTagsSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetsByTagsSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetByIdAfterUpdateSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetByIdAfterUpdateSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUpdatePetWithFormSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUpdatePetWithFormSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testDeletePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testDeletePetSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testFindPetByIdAfterDeleteSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testFindPetByIdAfterDeleteSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="PetTests.testUploadImageSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" name="testUploadImageSuccess" class="com.felixgear.petstores.pet.PetTests"/>
        <method signature="StoreTests.testGetInventorySuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testGetInventorySuccess" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testPlaceOrderSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testPlaceOrderSuccess" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testDeleteOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testDeleteOrderByIdSuccess" class="com.felixgear.petstores.store.StoreTests"/>
        <method signature="StoreTests.testGetOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" name="testGetOrderByIdSuccess" class="com.felixgear.petstores.store.StoreTests"/>
      </group> <!-- positive -->
    </groups>
    <test started-at="2024-06-18T11:59:29 CEST" name="DynamicGroups" finished-at="2024-06-18T11:59:36 CEST" duration-ms="7061">
      <class name="com.felixgear.petstores.store.StoreTests">
        <test-method signature="testDeleteOrderByIdFailure()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" started-at="2024-06-18T11:59:31 CEST" name="testDeleteOrderByIdFailure" description="Test for failure when deleting an order by invalid ID" finished-at="2024-06-18T11:59:32 CEST" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteOrderByIdFailure -->
        <test-method signature="testGetInventorySuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" started-at="2024-06-18T11:59:32 CEST" name="testGetInventorySuccess" description="Test for successfully retrieving the inventory" finished-at="2024-06-18T11:59:32 CEST" duration-ms="622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetInventorySuccess -->
        <test-method signature="testGetOrderByIdFailure()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" started-at="2024-06-18T11:59:32 CEST" name="testGetOrderByIdFailure" description="Test for failure when retrieving an order by invalid ID" finished-at="2024-06-18T11:59:33 CEST" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrderByIdFailure -->
        <test-method signature="testPlaceOrderFailure()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" started-at="2024-06-18T11:59:33 CEST" name="testPlaceOrderFailure" description="Test for failure when placing an order with invalid data" finished-at="2024-06-18T11:59:34 CEST" duration-ms="644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlaceOrderFailure -->
        <test-method signature="testPlaceOrderSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" started-at="2024-06-18T11:59:34 CEST" name="testPlaceOrderSuccess" description="Test for successfully placing an order" finished-at="2024-06-18T11:59:34 CEST" duration-ms="7" status="FAIL">
          <exception class="java.net.ConnectException">
            <message>
              <![CDATA[Connection refused: connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.net.ConnectException: Connection refused: connect
at java.base/java.net.PlainSocketImpl.connect0(Native Method)
at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
at java.base/java.net.Socket.connect(Socket.java:608)
at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
at io.restassured.internal.RestAssuredHttpBuilder.doRequest(RestAssuredHttpBuilder.java:141)
at io.restassured.internal.http.HTTPBuilder.doRequest(HTTPBuilder.java:496)
at io.restassured.internal.http.HTTPBuilder.request(HTTPBuilder.java:453)
at io.restassured.internal.http.HTTPBuilder$request$2.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.sendHttpRequest(RequestSpecificationImpl.groovy:1480)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendHttpRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1229)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at io.restassured.RestAssured.get(RestAssured.java:721)
at com.felixgear.petstores.store.StoreTests.testPlaceOrderSuccess(StoreTests.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.net.ConnectException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlaceOrderSuccess -->
        <test-method signature="testDeleteOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" started-at="2024-06-18T11:59:36 CEST" name="testDeleteOrderByIdSuccess" description="Test for successfully deleting an order by ID" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.store.StoreTests.testPlaceOrderSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method StoreTests.testDeleteOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method StoreTests.testDeleteOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteOrderByIdSuccess -->
        <test-method signature="testGetOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24]" started-at="2024-06-18T11:59:36 CEST" name="testGetOrderByIdSuccess" description="Test for successfully retrieving an order by ID" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.store.StoreTests.testPlaceOrderSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method StoreTests.testGetOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method StoreTests.testGetOrderByIdSuccess()[pri:0, instance:com.felixgear.petstores.store.StoreTests@1787bc24] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOrderByIdSuccess -->
      </class> <!-- com.felixgear.petstores.store.StoreTests -->
      <class name="com.felixgear.petstores.pet.PetTests">
        <test-method signature="testAddNewPetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:34 CEST" name="testAddNewPetFailure" description="Test for failure when adding a new pet with invalid data" finished-at="2024-06-18T11:59:34 CEST" duration-ms="633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewPetFailure -->
        <test-method signature="testAddNewPetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:34 CEST" name="testAddNewPetSuccess" description="Test for successfully adding a new pet" finished-at="2024-06-18T11:59:34 CEST" duration-ms="8" status="FAIL">
          <exception class="java.net.ConnectException">
            <message>
              <![CDATA[Connection refused: connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.net.ConnectException: Connection refused: connect
at java.base/java.net.PlainSocketImpl.connect0(Native Method)
at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
at java.base/java.net.Socket.connect(Socket.java:608)
at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
at org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:326)
at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
at io.restassured.internal.RestAssuredHttpBuilder.doRequest(RestAssuredHttpBuilder.java:141)
at io.restassured.internal.http.HTTPBuilder.doRequest(HTTPBuilder.java:496)
at io.restassured.internal.http.HTTPBuilder.request(HTTPBuilder.java:453)
at io.restassured.internal.http.HTTPBuilder$request$2.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.sendHttpRequest(RequestSpecificationImpl.groovy:1480)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendHttpRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1229)
at io.restassured.internal.RequestSpecificationImpl.this$2$sendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:166)
at io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)
at io.restassured.filter.Filter$filter$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.filter.CsrfFilter.filter(CsrfFilter.groovy:70)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at io.restassured.filter.Filter$filter.call(Unknown Source)
at io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)
at io.restassured.filter.FilterContext$next.call(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1704)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1710)
at io.restassured.internal.RequestSpecificationImpl.this$2$applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:343)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:328)
at groovy.lang.MetaClassImpl.doInvokeMethod(MetaClassImpl.java:1334)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1089)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1008)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:791)
at io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:46)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:172)
at io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)
at io.restassured.RestAssured.get(RestAssured.java:721)
at com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess(PetTests.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.net.ConnectException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewPetSuccess -->
        <test-method signature="testFindPetsByStatusFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:34 CEST" name="testFindPetsByStatusFailure" description="Test for failure when finding pets by invalid status" finished-at="2024-06-18T11:59:35 CEST" duration-ms="652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetsByStatusFailure -->
        <test-method signature="testUpdatePetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:35 CEST" name="testUpdatePetFailure" description="Test for failure when updating a pet with invalid data" finished-at="2024-06-18T11:59:36 CEST" duration-ms="635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePetFailure -->
        <test-method signature="testDeletePetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testDeletePetFailure" description="Test for failure when deleting a pet with invalid ID" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testDeletePetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testDeletePetFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePetFailure -->
        <test-method signature="testFindPetByIdFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testFindPetByIdFailure" description="Test for failure when finding a pet by invalid ID" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testFindPetByIdFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testFindPetByIdFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByIdFailure -->
        <test-method signature="testFindPetsByStatusSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testFindPetsByStatusSuccess" description="Test for successfully finding pets by status" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testFindPetsByStatusSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testFindPetsByStatusSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetsByStatusSuccess -->
        <test-method signature="testFindPetsByTagsFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testFindPetsByTagsFailure" description="Test for failure when updating a pet with invalid form data" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testFindPetsByTagsFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testFindPetsByTagsFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetsByTagsFailure -->
        <test-method signature="testFindPetsByTagsSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testFindPetsByTagsSuccess" description="Test for successfully finding pets by tags" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testFindPetsByTagsSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testFindPetsByTagsSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetsByTagsSuccess -->
        <test-method signature="testUpdatePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testUpdatePetSuccess" description="Test for successfully updating a pet" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testUpdatePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testUpdatePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePetSuccess -->
        <test-method signature="testUpdatePetWithFormFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testUpdatePetWithFormFailure" description="Test for failure when updating a pet with invalid form data" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testUpdatePetWithFormFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testUpdatePetWithFormFailure()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePetWithFormFailure -->
        <test-method signature="testUpdatePetWithFormSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testUpdatePetWithFormSuccess" description="Test for successfully updating a pet with form data" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testUpdatePetWithFormSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testUpdatePetWithFormSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePetWithFormSuccess -->
        <test-method signature="testUploadImageSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testUploadImageSuccess" description="Test for successfully uploading an image for a pet" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testAddNewPetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testUploadImageSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testUploadImageSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUploadImageSuccess -->
        <test-method signature="testFindPetByIdAfterUpdateSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testFindPetByIdAfterUpdateSuccess" description="Test for successfully finding a pet by ID" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testUpdatePetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testFindPetByIdAfterUpdateSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testFindPetByIdAfterUpdateSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByIdAfterUpdateSuccess -->
        <test-method signature="testDeletePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testDeletePetSuccess" description="Test for successfully deleting a pet" depends-on-groups="before_delete" finished-at="2024-06-18T11:59:36 CEST" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testDeletePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods in group "before_delete"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testDeletePetSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods in group "before_delete"
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletePetSuccess -->
        <test-method signature="testFindPetByIdAfterDeleteSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb]" started-at="2024-06-18T11:59:36 CEST" name="testFindPetByIdAfterDeleteSuccess" description="Test for successfully finding a pet by ID" finished-at="2024-06-18T11:59:36 CEST" depends-on-methods="com.felixgear.petstores.pet.PetTests.testDeletePetSuccess" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method PetTests.testFindPetByIdAfterDeleteSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method PetTests.testFindPetByIdAfterDeleteSuccess()[pri:0, instance:com.felixgear.petstores.pet.PetTests@20d7d6fb] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPetByIdAfterDeleteSuccess -->
      </class> <!-- com.felixgear.petstores.pet.PetTests -->
      <class name="com.felixgear.petstores.person.PersonTests">
        <test-method signature="testCreateUsersWithArrayFailure()[pri:0, instance:com.felixgear.petstores.person.PersonTests@29a5f4e7]" started-at="2024-06-18T11:59:29 CEST" name="testCreateUsersWithArrayFailure" description="Test for failure when creating users with array with invalid data" finished-at="2024-06-18T11:59:30 CEST" duration-ms="1789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUsersWithArrayFailure -->
        <test-method signature="testGetUserByUsernameFailure()[pri:0, instance:com.felixgear.petstores.person.PersonTests@29a5f4e7]" started-at="2024-06-18T11:59:30 CEST" name="testGetUserByUsernameFailure" description="Test for failure when getting user by invalid username" finished-at="2024-06-18T11:59:31 CEST" duration-ms="699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserByUsernameFailure -->
        <test-method signature="testLogoutUserFailure()[pri:0, instance:com.felixgear.petstores.person.PersonTests@29a5f4e7]" started-at="2024-06-18T11:59:31 CEST" name="testLogoutUserFailure" description="Test for failure when logging out a user with invalid session" finished-at="2024-06-18T11:59:31 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogoutUserFailure -->
      </class> <!-- com.felixgear.petstores.person.PersonTests -->
    </test> <!-- DynamicGroups -->
  </suite> <!-- Suite -->
</testng-results>
